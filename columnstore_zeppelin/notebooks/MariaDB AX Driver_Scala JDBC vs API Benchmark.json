{"paragraphs":[{"text":"%md\n## JDBC vs API Write Benchmark\n","user":"buff","dateUpdated":"2018-12-17T13:39:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>JDBC vs API Write Benchmark</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1545052398114_471121864","id":"20180724-154057_1976865111","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:39:56+0000","dateFinished":"2018-12-17T13:39:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:58046"},{"text":"import com.mariadb.columnstore.api.connector.ColumnStoreExporter\nimport java.util.Properties\nimport org.apache.spark.sql.{SQLContext,DataFrame}\nimport org.apache.spark.sql.functions.{rand, randn, sha1, sha2, md5}\nimport java.sql.{DriverManager,Connection,Date,Timestamp,PreparedStatement,ResultSet,SQLException}\n\nval url = \"jdbc:mysql://{{columnstore_host_nm}}:3306/test\".replace(\"{\",\"\").replace(\"}\",\"\")\n\nvar connectionProperties = new Properties()\nconnectionProperties.put(\"user\", \"zeppelin_user\")\nconnectionProperties.put(\"password\", \"zeppelin_pass\")\nconnectionProperties.put(\"driver\", \"org.mariadb.jdbc.Driver\")\n\nval sqlContext = new SQLContext(sc)\nimport sqlContext.implicits._\n\n// SampleDataframe size parameter:\nval asciiRange = 128\nval randRange = 1000\nval hashRange = 1000","user":"buff","dateUpdated":"2018-12-17T13:39:44+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.mariadb.columnstore.api.connector.ColumnStoreExporter\nimport java.util.Properties\nimport org.apache.spark.sql.{SQLContext, DataFrame}\nimport org.apache.spark.sql.functions.{rand, randn, sha1, sha2, md5}\nimport java.sql.{DriverManager, Connection, Date, Timestamp, PreparedStatement, ResultSet, SQLException}\nurl: String = jdbc:mysql://columnstore_host_nm:3306/test\nconnectionProperties: java.util.Properties = {}\nres195: Object = null\nres196: Object = null\nres197: Object = null\nwarning: there was one deprecation warning; re-run with -deprecation for details\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@ba48968\nimport sqlContext.implicits._\nasciiRange: Int = 128\nrandRange: Int = 1000\nhashRange: Int = 1000\n"}]},"apps":[],"jobName":"paragraph_1545052398116_-1456290577","id":"20180724-154135_937012168","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:36:40+0000","dateFinished":"2018-12-17T13:36:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58047","title":"Import needed packets and set connections up"},{"text":"var connection: Connection = null\ntry {\n      connection = DriverManager.getConnection(url, connectionProperties)\n      val statement = connection.createStatement\n      statement.executeQuery(\"\"\"DROP DATABASE IF EXISTS benchmark\"\"\")\n      statement.executeQuery(\"\"\"CREATE DATABASE IF NOT EXISTS benchmark\"\"\")\n    } catch {\n      case e: Exception => e.printStackTrace()\n    } finally {\n      connection.close()\n    }","user":"buff","dateUpdated":"2018-12-17T13:39:31+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"connection: java.sql.Connection = null\nres200: Any = org.mariadb.jdbc.internal.com.read.resultset.SelectResultSet@49580a48\n"}]},"apps":[],"jobName":"paragraph_1545052398118_-679834695","id":"20180724-154755_2000804815","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:36:47+0000","dateFinished":"2018-12-17T13:36:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58049","title":"Prepare the database"},{"text":"val asciiDF = sc.makeRDD(0 until asciiRange).map(i => (i.toChar.toString, i)).toDF(\"ascii_representation\", \"number\").cache()\nasciiDF.count()\nasciiDF.printSchema()\n\nval randDF = sqlContext.range(0, randRange).withColumn(\"uniform\", rand(seed=23)).withColumn(\"normal\", randn(seed=42)).cache()\nrandDF.count()\nrandDF.printSchema()\nval tmpDF = sc.makeRDD(0 until hashRange).map(i => (i, i.toString)).toDF(\"number\", \"string\")\ntmpDF.registerTempTable(\"tempDF\")\nval hashDF = sqlContext.sql(\"SELECT number, sha2(string,256) AS sha256, sha2(string,512) AS sha512, md5(string) AS md5 FROM tempDF\").cache()\nhashDF.count()\nhashDF.printSchema()\n\nval asciiDF = sc.makeRDD(0 until asciiRange).map(i => (i.toChar.toString, i)).toDF(\"ascii_representation\", \"number\").cache()\nasciiDF.count()\nasciiDF.printSchema()\nval randDF = sqlContext.range(0, randRange).withColumn(\"uniform\", rand(seed=23)).withColumn(\"normal\", randn(seed=42)).cache()\nrandDF.count()\nrandDF.printSchema()\nval tmpDF = sc.makeRDD(0 until hashRange).map(i => (i, i.toString)).toDF(\"number\", \"string\")\ntmpDF.registerTempTable(\"tempDF\")\nval hashDF = sqlContext.sql(\"SELECT number, sha2(string,256) AS sha256, sha2(string,512) AS sha512, md5(string) AS md5 FROM tempDF\").cache()\nhashDF.count()\nhashDF.printSchema()","user":"buff","dateUpdated":"2018-12-17T13:40:13+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"asciiDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [ascii_representation: string, number: int]\nres202: Long = 128\nroot\n |-- ascii_representation: string (nullable = true)\n |-- number: integer (nullable = false)\n\nrandDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: bigint, uniform: double ... 1 more field]\nres204: Long = 1000\nroot\n |-- id: long (nullable = false)\n |-- uniform: double (nullable = false)\n |-- normal: double (nullable = false)\n\ntmpDF: org.apache.spark.sql.DataFrame = [number: int, string: string]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nhashDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [number: int, sha256: string ... 2 more fields]\nres207: Long = 1000\nroot\n |-- number: integer (nullable = false)\n |-- sha256: string (nullable = true)\n |-- sha512: string (nullable = true)\n |-- md5: string (nullable = true)\n\nasciiDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [ascii_representation: string, number: int]\nres209: Long = 128\nroot\n |-- ascii_representation: string (nullable = true)\n |-- number: integer (nullable = false)\n\nrandDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: bigint, uniform: double ... 1 more field]\nres211: Long = 1000\nroot\n |-- id: long (nullable = false)\n |-- uniform: double (nullable = false)\n |-- normal: double (nullable = false)\n\ntmpDF: org.apache.spark.sql.DataFrame = [number: int, string: string]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nhashDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [number: int, sha256: string ... 2 more fields]\nres214: Long = 1000\nroot\n |-- number: integer (nullable = false)\n |-- sha256: string (nullable = true)\n |-- sha512: string (nullable = true)\n |-- md5: string (nullable = true)\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.5.0.6:4040/jobs/job?id=64","http://10.5.0.6:4040/jobs/job?id=65","http://10.5.0.6:4040/jobs/job?id=66","http://10.5.0.6:4040/jobs/job?id=67","http://10.5.0.6:4040/jobs/job?id=68","http://10.5.0.6:4040/jobs/job?id=69"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545052398118_36176749","id":"20180726-101940_611366499","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:36:52+0000","dateFinished":"2018-12-17T13:37:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58051","title":"Create the sample dataframes to insert"},{"text":"def createColumnStoreAPITable(name: String, schema: String) : Unit = {\n  var connection: Connection = null\n  try {\n      connection = DriverManager.getConnection(\"jdbc:mysql://{{columnstore_host_nm}}:3306/benchmark\".replace(\"{\",\"\").replace(\"}\",\"\"), connectionProperties)\n      val statement = connection.createStatement\n      statement.executeQuery(\"CREATE TABLE IF NOT EXISTS \" + name + \" (\" + schema + \") engine=columnstore\")\n  } catch {\n      case e: Exception => e.printStackTrace()\n  } finally {\n      connection.close()\n  }   \n}\n\nimport com.mariadb.columnstore.api.ColumnStoreDriver\n\ndef benchmark(name: String, dataframe: DataFrame, schema: String) = {\n    var t = System.nanoTime()\n    dataframe.write.option(\"createTableOptions\", \"ENGINE=innodb\").\n    option(\"createTableColumnTypes\", schema).option(\"mode\",\"overwrite\").jdbc(url, \"benchmark.jdbc_innodb_\"+name, connectionProperties)\n    val jdbc_innodb_time = System.nanoTime() - t\n    t = System.nanoTime()\n    dataframe.write.option(\"numPartitions\", 1).option(\"createTableOptions\", \"ENGINE=columnstore\").\n    option(\"createTableColumnTypes\", schema).option(\"mode\",\"overwrite\").jdbc(url, \"benchmark.jdbc_columnstore_\"+name, connectionProperties)\n    val jdbc_columnstore_time = System.nanoTime() - t\n    t = System.nanoTime()\n    createColumnStoreAPITable(\"api_columnstore_\"+name, schema)\n    ColumnStoreExporter.export(\"benchmark\", \"api_columnstore_\"+name, dataframe)\n    val api_columnstore_time = System.nanoTime() - t\n    (jdbc_innodb_time, jdbc_columnstore_time, api_columnstore_time)\n}\n\nval ascii_benchmark = benchmark(\"ascii\", asciiDF, \"ascii_representation CHAR(1), number INT\")\nval rand_benchmark = benchmark(\"rand\", randDF, \"id BIGINT, uniform DOUBLE, normal DOUBLE\")\nval hash_benchmark = benchmark(\"hash\", hashDF, \"number BIGINT, sha256 VARCHAR(64), sha512 VARCHAR(128), md5 VARCHAR(32)\")","user":"buff","dateUpdated":"2018-12-17T13:40:37+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"table","height":304,"optionOpen":false}}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.5.0.6:4040/jobs/job?id=70","http://10.5.0.6:4040/jobs/job?id=71","http://10.5.0.6:4040/jobs/job?id=72","http://10.5.0.6:4040/jobs/job?id=73","http://10.5.0.6:4040/jobs/job?id=74","http://10.5.0.6:4040/jobs/job?id=75","http://10.5.0.6:4040/jobs/job?id=76","http://10.5.0.6:4040/jobs/job?id=77","http://10.5.0.6:4040/jobs/job?id=78","http://10.5.0.6:4040/jobs/job?id=79","http://10.5.0.6:4040/jobs/job?id=80","http://10.5.0.6:4040/jobs/job?id=81"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545052398119_890545116","id":"20180726-101943_392650583","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:37:01+0000","dateFinished":"2018-12-17T13:39:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58053","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"createColumnStoreAPITable: (name: String, schema: String)Unit\nimport com.mariadb.columnstore.api.ColumnStoreDriver\nbenchmark: (name: String, dataframe: org.apache.spark.sql.DataFrame, schema: String)(Long, Long, Long)\nExecution time: 1.083108361\nRows inserted: 128\nTruncation count: 1\nSaturated count: 0\nInvalid count: 0\nascii_benchmark: (Long, Long, Long) = (162693907,5638313055,1838281306)\nExecution time: 1.639085411\nRows inserted: 1000\nTruncation count: 0\nSaturated count: 0\nInvalid count: 0\nrand_benchmark: (Long, Long, Long) = (370866747,43100741964,2299874924)\nExecution time: 5.209527514\nRows inserted: 1000\nTruncation count: 0\nSaturated count: 0\nInvalid count: 0\nhash_benchmark: (Long, Long, Long) = (358718656,77973487227,6325360029)\n"}]},"title":"Benchmark the insertion"},{"text":"println(\"jdbc_innodb\\tjdbc_columnstore\\tapi_columnstore\\t\\trows\\t\\titems\")\nprintln(ascii_benchmark._1/1000000000.toDouble+\"s\\t\"+ascii_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+ascii_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+asciiDF.count+\"\\t\\t\"+asciiDF.count*asciiDF.columns.size)\nprintln(rand_benchmark._1/1000000000.toDouble+\"s\\t\"+rand_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+rand_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+randDF.count+\"\\t\\t\"+randDF.count*randDF.columns.size)\nprintln(hash_benchmark._1/1000000000.toDouble+\"s\\t\"+hash_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+hash_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+hashDF.count+\"\\t\\t\"+hashDF.count*hashDF.columns.size)","user":"buff","dateUpdated":"2018-12-17T13:49:58+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"table","height":156.34510803222656,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"jdbc_innodb":"string","jdbc_columnstore":"string","api_columnstore":"string","rows":"string","items":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"jdbc_innodb","index":0,"aggr":"sum"},{"name":"jdbc_columnstore","index":1,"aggr":"sum"},{"name":"api_columnstore","index":2,"aggr":"sum"}],"groups":[],"values":[]},"helium":{}}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"jdbc_innodb\tjdbc_columnstore\tapi_columnstore\t\trows\t\titems\n0.162693907s\t5.638313055s\t\t1.838281306s\t\t128\t\t256\n0.370866747s\t43.100741964s\t\t2.299874924s\t\t1000\t\t3000\n0.358718656s\t77.973487227s\t\t6.325360029s\t\t1000\t\t4000\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://10.5.0.6:4040/jobs/job?id=82","http://10.5.0.6:4040/jobs/job?id=83","http://10.5.0.6:4040/jobs/job?id=84","http://10.5.0.6:4040/jobs/job?id=85","http://10.5.0.6:4040/jobs/job?id=86","http://10.5.0.6:4040/jobs/job?id=87"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1545052398124_980502500","id":"20180726-101946_912860111","dateCreated":"2018-12-17T13:13:18+0000","dateStarted":"2018-12-17T13:39:23+0000","dateFinished":"2018-12-17T13:39:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58055","title":"Present the benchmark results"},{"text":"\nprint(\"\"\"%table\n\"\"\")\n\nprint(\"Test\\tascii_benchmark\\trand_benchmark\\thash_benchmark\\n\")\nprint(\"JDBC_innodb\\t\"+ascii_benchmark._1/1000000000.toDouble+\"\\t\"+rand_benchmark._1/1000000000.toDouble+\"\\t\"+hash_benchmark._1/1000000000.toDouble+\"\\n\")\nprint(\"JDBC_columnstore\\t\"+ascii_benchmark._2/1000000000.toDouble+\"\\t\"+rand_benchmark._2/1000000000.toDouble+\"\\t\"+hash_benchmark._2/1000000000.toDouble+\"\\n\")\nprint(\"API_columnstore\\t\"+ascii_benchmark._3/1000000000.toDouble+\"\\t\"+rand_benchmark._3/1000000000.toDouble+\"\\t\"+hash_benchmark._3/1000000000.toDouble+\"\\n\")\n\n\n","user":"buff","dateUpdated":"2018-12-17T13:50:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"test","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"times","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""},{"name":"ascii_benchmark","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"rand_benchmark","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"hash_benchmark","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Test":"string","ascii_benchmark":"string","rand_benchmark":"string","hash_benchmark":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","lineWithFocus":true}},"commonSetting":{},"keys":[{"name":"Test","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"ascii_benchmark","index":1,"aggr":"sum"},{"name":"rand_benchmark","index":2,"aggr":"sum"},{"name":"hash_benchmark","index":3,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Test\tascii_benchmark\trand_benchmark\thash_benchmark\nJDBC_innodb\t0.162693907\t0.370866747\t0.358718656\nJDBC_columnstore\t5.638313055\t43.100741964\t77.973487227\nAPI_columnstore\t1.838281306\t2.299874924\t6.325360029\n"}]},"apps":[],"jobName":"paragraph_1545052398125_403612238","id":"20180730-172005_778846879","dateCreated":"2018-12-17T13:13:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58056","dateFinished":"2018-12-17T13:39:27+0000","dateStarted":"2018-12-17T13:39:25+0000"},{"user":"buff","dateUpdated":"2018-12-17T13:41:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Test","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"ascii_benchmark","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545052398127_-1056143121","id":"20180730-163807_2060257208","dateCreated":"2018-12-17T13:13:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58057","dateFinished":"2018-12-17T13:39:29+0000","dateStarted":"2018-12-17T13:39:27+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Test\tascii_benchmark\nJDBC_innodb\t0.162693907\nJDBC_columnstore\t5.638313055\nAPI_columnstore\t1.838281306\n"}]},"text":"print(\"\"\"%table\n\"\"\")\n\nprint(\"Test\\tascii_benchmark\\n\")\nprint(\"JDBC_innodb\\t\"+ascii_benchmark._1/1000000000.toDouble+\"\\n\")\nprint(\"JDBC_columnstore\\t\"+ascii_benchmark._2/1000000000.toDouble+\"\\n\")\nprint(\"API_columnstore\\t\"+ascii_benchmark._3/1000000000.toDouble+\"\\n\")\n"},{"user":"buff","dateUpdated":"2018-12-17T13:41:30+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Test":"string","rand_benchmark":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Test","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"rand_benchmark","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545052398127_-181110023","id":"20180726-124408_722623084","dateCreated":"2018-12-17T13:13:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58058","dateFinished":"2018-12-17T13:39:31+0000","dateStarted":"2018-12-17T13:39:29+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Test\trand_benchmark\nJDBC_innodb\t0.370866747\nJDBC_columnstore\t43.100741964\nAPI_columnstore\t2.299874924\n"}]},"text":"print(\"\"\"%table\n\"\"\")\n\nprint(\"Test\\trand_benchmark\\n\")\nprint(\"JDBC_innodb\\t\"+rand_benchmark._1/1000000000.toDouble+\"\\n\")\nprint(\"JDBC_columnstore\\t\"+rand_benchmark._2/1000000000.toDouble+\"\\n\")\nprint(\"API_columnstore\\t\"+rand_benchmark._3/1000000000.toDouble+\"\\n\")"},{"user":"buff","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Test","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"ascii_benchmark","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545053631998_-1932324049","id":"20181217-133351_2101175457","dateCreated":"2018-12-17T13:33:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:60742","text":"print(\"\"\"%table\n\"\"\")\n\nprint(\"Test\\tascii_benchmark\\trand_benchmark\\thash_benchmark\\n\")\nprint(\"JDBC_innodb\\t\"+hash_benchmark._1/1000000000.toDouble+\"\\n\")\nprint(\"JDBC_columnstore\\t\"+hash_benchmark._2/1000000000.toDouble+\"\\n\")\nprint(\"API_columnstore\\t\"+hash_benchmark._3/1000000000.toDouble+\"\\n\")","dateUpdated":"2018-12-17T13:41:58+0000","dateFinished":"2018-12-17T13:41:47+0000","dateStarted":"2018-12-17T13:41:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Test\tascii_benchmark\trand_benchmark\thash_benchmark\nJDBC_innodb\t0.358718656\nJDBC_columnstore\t77.973487227\nAPI_columnstore\t6.325360029\n"}]}},{"user":"buff","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545054348641_2071812920","id":"20181217-134548_471756042","dateCreated":"2018-12-17T13:45:48+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:63865"}],"name":"MariaDB AX Driver/Scala JDBC vs API Benchmark","id":"2DZDVDCBG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}